using UnityEngine;
using UnityEngine.UI;
using TMPro;

public class PuzzleManager1 : MonoBehaviour
{
    public GameObject[] puzzlePiecesSet1;
    public GameObject[] puzzlePiecesSet2;
    public GameObject[] puzzlePiecesSet3;
    public GameObject[] puzzlePiecesSet4;
    public GameObject[] puzzlePiecesSet5;

    public Transform[] puzzleSlots;
    public Image backgroundImageSet1;
    public Image backgroundImageSet2;
    public Image backgroundImageSet3;
    public Image backgroundImageSet4;
    public Image backgroundImageSet5;

    public GameObject dialoguePanel;
    public Image dialogueImage;
    public TextMeshProUGUI dialogueText;
    public TextMeshProUGUI dialogueNameText; // New TMP text for displaying the name
    public Image dialogueFrame; // 固定的對話框圖像
    public Button nextButton; // nextButton 元件

    public TextMeshProUGUI scoreText;
    private int score = 0;
    private bool isSet1Completed = false;
    private bool isSet2Completed = false;
    private bool isSet3Completed = false;
    private bool isSet4Completed = false;
    private bool isSet5Completed = false;

    public Sprite[] dialogueImages; // 用於對話框的圖像
    public string[] dialogueTexts;   // 用於顯示的文本
    public string[] dialogueNames;   // 用於顯示的名稱

    public RawImage XUNZHANG; // 新增 RawImage UI 元件，用於顯示勳章
    public Sprite XUNZHANG1; // 0-110 分數範圍的勳章圖片
    public Sprite XUNZHANG2; // 120-230 分數範圍的勳章圖片
    public Sprite XUNZHANG3; // 240 分以上的勳章圖片

    private bool[] puzzleCompleted = new bool[5];
    private GameObject[][] puzzlePiecesSets;
    private Image[] backgroundImages;

    void Start()
    {
    puzzlePiecesSets = new[] { puzzlePiecesSet1, puzzlePiecesSet2, puzzlePiecesSet3, puzzlePiecesSet4, puzzlePiecesSet5 };
    backgroundImages = new[] { backgroundImageSet1, backgroundImageSet2, backgroundImageSet3, backgroundImageSet4, backgroundImageSet5 };


    foreach (var pieces in puzzlePiecesSets)
        HidePuzzlePieces(pieces);
    
    foreach (var bg in backgroundImages)
        bg.enabled = false;

        dialoguePanel.SetActive(false);
        nextButton.gameObject.SetActive(false); // 初始化時隱藏 nextButton
        scoreText.enabled = false;
        score = PlayerPrefs.GetInt("PlayerScore", 0);
        UpdateScoreText();
        UpdateXunZhangImage(); // 初始化時更新勳章
    }
    private void HidePuzzlePieces(GameObject[] puzzlePieces)
        {
            foreach (GameObject piece in puzzlePieces)
            {
                piece.SetActive(false);
                piece.GetComponent<Draggable1>().enabled = false;
            }
        }
    
    public void OnImageScanned(int imageTargetID)
{
    EnableBackgroundImage(imageTargetID);
    scoreText.enabled = true;
    UpdateScoreText();

    int index = imageTargetID - 1; // 將 imageTargetID 映射到索引
    if (index >= 0 && index < puzzlePiecesSets.Length && !puzzleCompleted[index])
    {
        // 激活當前拼圖組
        ActivatePuzzlePieces(puzzlePiecesSets[index]);
        // 顯示對應背景
        backgroundImages[index].enabled = true;

        scoreText.enabled = true; // 確保分數顯示
        UpdateScoreText();
    }
    }

            private void EnableBackgroundImage(int imageTargetID)
        {
            backgroundImageSet1.enabled = imageTargetID == 1;
            backgroundImageSet2.enabled = imageTargetID == 2;
            backgroundImageSet3.enabled = imageTargetID == 3;
            backgroundImageSet4.enabled = imageTargetID == 4;
            backgroundImageSet5.enabled = imageTargetID == 5;
        }


    private void ActivatePuzzlePieces(GameObject[] puzzlePieces)
    {
        foreach (GameObject piece in puzzlePieces)
        {
            piece.SetActive(true);
            piece.GetComponent<Draggable1>().enabled = true;
        }
    }

    private void UpdateScoreText()
    {
        scoreText.text = "" + score;
    }

    private void UpdateXunZhangImage()
{
    if (score >= 240)
    {
        SetXunZhangImage(XUNZHANG3.texture, 300);
    }
    else if (score >= 120)
    {
        SetXunZhangImage(XUNZHANG2.texture, 200);
    }
    else
    {
        SetXunZhangImage(XUNZHANG1.texture, 200);
    }
}
    private void SetXunZhangImage(Texture texture, float width)
    {
        XUNZHANG.texture = texture;
        XUNZHANG.rectTransform.sizeDelta = new Vector2(width, XUNZHANG.rectTransform.sizeDelta.y);
    }


        public void CheckCorrectPlacement()
    {
        int currentSetIndex = GetCurrentPuzzleIndex();

        if (currentSetIndex >= 0)
        {
            bool allCorrect = true;
            foreach (var piece in puzzlePiecesSets[currentSetIndex])
            {
                if (!piece.GetComponent<Draggable1>().isInCorrectPosition)
                {
                    allCorrect = false;
                    break;
                }
            }

            if (allCorrect)
                {
                puzzleCompleted[currentSetIndex] = true; // 設置完成標誌
                score += 20;                            // 增加分數
                UpdateScoreText();
                UpdateXunZhangImage();                  // 更新勳章
                HidePuzzlePieces(puzzlePiecesSets[currentSetIndex]);
                backgroundImages[currentSetIndex].enabled = false;
                
                    if (currentSetIndex == puzzleCompleted.Length - 1)
                    {
                        Debug.Log("遊戲完成！");
                    }
                }

        }
    }
    
        private int GetCurrentPuzzleIndex()
    {
        for (int i = 0; i < puzzleCompleted.Length; i++)
        {
            if (!puzzleCompleted[i])
                return i;
        }
        return -1; // 所有拼圖都已完成
    }

    private void ShowDialogue(int index)
    {
        // 設定對話圖像
        dialogueImage.sprite = dialogueImages[index];
        
        // 根據不同的圖片索引設置顯示大小
        AdjustImageSize(index);

        // 設定對話文本與名稱
        dialogueText.text = dialogueTexts[index];
        dialogueNameText.text = dialogueNames[index];

        // 顯示對話面板與按鈕
        dialoguePanel.SetActive(true);
        nextButton.gameObject.SetActive(true);

        // 在第一關拼圖完成後顯示 dialogueFrame，並保持顯示
        if (isSet1Completed)
        {
            dialogueFrame.enabled = true;
        }
    }

    private void AdjustImageSize(int index)
    {
        if (dialogueImage.sprite != null)
        {
            float imageWidth = dialogueImage.sprite.rect.width;
            float imageHeight = dialogueImage.sprite.rect.height;

            // 不同索引有不同的最大尺寸
            float maxWidth = 400f; // 預設最大寬度
            float maxHeight = 400f; // 預設最大高度

            // 為每張圖片設定單獨的尺寸
            switch (index)
            {
                case 0:
                    maxWidth = 575f;
                    maxHeight = 794f;
                    break;
                case 1:
                    maxWidth = 800f;
                    maxHeight = 621f;
                    break;
                case 2:
                    maxWidth = 969f;
                    maxHeight = 676f;
                    break;
                case 3:
                    maxWidth = 969f;
                    maxHeight = 676f;
                    break;
                case 4:
                    maxWidth = 969f;
                    maxHeight = 676f;
                    break;
            }

            // 計算縮放比例，保持圖片比例
            float scaleFactor = Mathf.Min(maxWidth / imageWidth, maxHeight / imageHeight);

            // 調整 RectTransform 的大小
            dialogueImage.rectTransform.sizeDelta = new Vector2(imageWidth * scaleFactor, imageHeight * scaleFactor);
        }
    }



    public void OnNextButtonClicked()
    {
        // 隱藏對話內容
        dialogueImage.sprite = null;
        dialogueText.text = "";
        dialogueNameText.text = ""; // 清除對話名稱
        dialoguePanel.SetActive(false);
        nextButton.gameObject.SetActive(false);

        // 只有當遊戲結束時才隱藏 dialogueFrame
        if (isSet5Completed)
        {
            dialogueFrame.enabled = false;
        }
    }

}
